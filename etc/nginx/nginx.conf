 user                           www-data;
 worker_processes               auto;
 worker_cpu_affinity            auto;
 pid                            /run/nginx.pid;

 worker_rlimit_nofile           65535;
 timer_resolution               100ms;
 pcre_jit                       on;
 thread_pool                    default threads=32 max_queue=65536;

events {
    multi_accept                on;
    worker_connections          50000;
    accept_mutex                off;
    accept_mutex_delay          200ms;
    use                         epoll;
}

http {
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;

 charset                            UTF-8;
    etag                               on;
        send_timeout                       10s;
    sendfile                    on;
    sendfile_max_chunk          512k;

    tcp_nopush                  on;
    tcp_nodelay                 on;

    keepalive_timeout           8;
    keepalive_requests          500;
    keepalive_disable           msie6;

    lingering_time              20s;
    lingering_timeout           5s;

    request_pool_size                  32k;
    output_buffers                     8 256k;
    postpone_output                    1460;

    server_tokens               off;
    reset_timedout_connection   on;
    add_header                  X-Powered-By "Nginx-ee v3.5.2 - Optimized by VirtuBox";
    add_header                  rt-Fastcgi-Cache $upstream_cache_status;

    # #                           Limit Request
    # limit_req_status            403;
    # limit_req_zone              $remote_addr_ipscrub zone=one:10m rate=1r/s;

    ##
    #                           Simple DOS mitigation
    ##

    #                           Max c/s by ip
    #limit_conn_zone            $binary_remote_addr zone=limit_per_ip:10m;
    #limit_conn                 limit_per_ip 80;
    #                           Max rq/s by ip
    #limit_req_zone             $binary_remote_addr zone=allips:10m rate=400r/s;
    #limit_req                  zone=allips burst=400 nodelay;
    #                           Proxy Settings
    #                           set_real_ip_from proxy-server-ip;
    #                           real_ip_header X-Forwarded-For;
    fastcgi_read_timeout        120s;
    client_max_body_size               0;
    client_body_buffer_size            128k;
    client_header_buffer_size          3m;
    large_client_header_buffers        4 256k;


    open_file_cache                    max=75000 inactive=60s;
    open_file_cache_valid              120s;
    open_file_cache_min_uses           2;
    open_file_cache_errors             off;
    open_log_file_cache                max=20000 inactive=30s min_uses=2;

    ignore_invalid_headers             on;

    #                           See - https://www.nginx.com/blog/thread-pools-boost-performance-9x/
    aio                         threads;

    

    map_hash_bucket_size               256;
    map_hash_max_size                  4096;
    types_hash_max_size                2048;
    variables_hash_max_size            2048;

    geo                                $rate_limit {include /etc/nginx/geo.d/ratelimit.conf;}
    map                                $rate_limit $rate_limit_key {include /etc/nginx/map.d/access/*.map;}
    map                                $http_user_agent $no_logs {include /etc/nginx/map.d/logs/ua.map;}

    #                           nginx-vts-status module
    vhost_traffic_status_zone;

  
    log_format                          blocked '$time_local: Blocked request from $http_x_real_ip $request';
    log_format                          main_ext '{ "@timestamp": "$time_iso8601", '
                                                  '"@fields": { '
                                                  '"remote_addr": "$remote_addr", '
                                                  '"remote_user": "$remote_user", '
                                                  '"status": "$status", '
                                                  '"request": "$request", '
                                                  '"request_uri": "$request_uri", '
                                                  '"request_method": "$request_method", '
                                                  '"request_time": "$request_time", '
                                                  '"request_uri_query": "$query_string", '
                                                  '"http_referrer": "$http_referer", '
                                                  '"http_user_agent": "$http_user_agent", '
                                                  '"http_forward": "$proxy_add_x_forwarded_for", '
                                                  '"http_header": "$http_x_header", '
                                                  '"body_bytes_sent": "$body_bytes_sent", '
                                                  '"geo_country": "$geoip_country_code", '
                                                  '"geo_city": "$geoip_city", '
                                                  '"server_name": "$server_name", '
                                                  '"upstream_addr": "$upstream_addr", '
                                                  '"upstream_status": "$upstream_status", '
                                                  '"upstream_response_time": "$upstream_response_time", '
                                                  '"upstream_response_length": "$upstream_response_length", '
                                                  '"upstream_cache_status": "$upstream_cache_status" } }';

    access_log                           /var/log/nginx/access.log main_ext;
    error_log                           /var/log/nginx/access.log error;

    resolver                             1.1.1.1 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout                     15s;

    map                                  $http_x_forwarded_proto $proxy_x_forwarded_proto {include /etc/nginx/map.d/header/proto.map;}
    map                                  $http_x_forwarded_port $proxy_x_forwarded_port {include /etc/nginx/map.d/header/port.map;}
    map                                  $http_upgrade $proxy_connection {include /etc/nginx/map.d/header/upgrade.map;}
    map                                  $scheme $proxy_x_forwarded_ssl {include /etc/nginx/map.d/header/scheme.map;}
    map                                  $host:$server_port$request_uri $noindex {include /etc/nginx/map.d/header/robot.map;}
    map                                  $request_method $skip_fetch {include /etc/nginx/map.d/srcache/*.map;}

    map                                  $sent_http_content_type $expires {include /etc/nginx/map.d/cache/expires.map;}
    map                                  $http_cookie $php_session_cookie {include /etc/nginx/map.d/cache/phpsession.map;}

    map                                  $request_uri $redirect_uri {include /etc/nginx/map.d/redirects/*.map;}
    map                                  $request_uri $no_cache {include /etc/nginx/map.d/nocache/nocache.map;}
    map                                  $http_cookie $no_cache {include /etc/nginx/map.d/nocache/cookie.map;}

    map                                  $http_user_agent $crawler_pre {include /etc/nginx/map.d/referrer/crawler.map;}
    map                                  $http_user_agent $bot_pre {include /etc/nginx/map.d/referrer/bot.map;}
    map                                  $args $prerender {default $bot_pre; "~(^|&)_escaped_fragment_=" 1;}

    fastcgi_cache_path                  /var/cache/fastcgi keys_zone=fastcgicache:10m levels=1:2 inactive=30m max_size=64m;
    fastcgi_cache_key                    $scheme$request_method$host$request_uri$php_session_cookie;

    proxy_cache_path                    /var/cache/proxy keys_zone=proxycache:10m levels=1:2 inactive=30m max_size=64m;
    proxy_cache_key                      $scheme$request_method$http_host$request_uri;

    map                                  $request_method $purge_method {include /etc/nginx/map.d/purge/*.map;}
    geo                                  $purge_allowed {include /etc/nginx/geo.d/purge.conf;}

    geo                                  $whitelist {include /etc/nginx/geo.d/whitelist.conf;}
    map                                  $whitelist $limit_access {include /etc/nginx/map.d/access/*.map;}
    expires                              $expires;

    index                                app.php index.php index.html default.html;

    include                              upstreams.conf;
    include                              conf.d/req_zone.conf;
    include                              conf.d/brotli.conf;
    include                            conf.d/gzip.conf;
    include                              conf.d/proxy.conf;
    #include                              /etc/nginx/conf.d/botblocker-nginx-settings.conf;
  #  include                              /etc/nginx/conf.d/globalblacklist.conf;

    include                              /etc/nginx/sites-available/*.vhost;
    ##
    #                           SSL Early Data
    ssl_early_data              on;

    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_ciphers                 'TLS13+AESGCM+AES256:TLS13+AESGCM+AES128:TLS13+CHACHA20:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES';
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:50m;
    ssl_session_timeout         1d;
    ssl_session_tickets         off;
    ssl_ecdh_curve              X25519:sect571r1:secp521r1:secp384r1;

    #                           Common security headers
    # more_set_headers            "X-Frame-Options : SAMEORIGIN";
    # more_set_headers            "X-Xss-Protection : 1; mode=block";
    # more_set_headers            "X-Content-Type-Options : nosniff";
    # more_set_headers            "Referrer-Policy : strict-origin-when-cross-origin";
    # more_set_headers            "X-Download-Options : noopen;";

    ##
    #                           Basic Settings
    ##
    #                           server_names_hash_bucket_size 64;
    #                           server_name_in_redirect off;


    ##
    #                           Logging Settings
    ##

    # #                           disable access_log for performance
    # access_log                  off;
    # error_log                   /var/log/nginx/error.log;

    # #                           Log format Settings - user IP hashed with the module ipscrub
    # #                           log_format rt_cache '$remote_addr_ipscrub $upstream_response_time $upstream_cache_status [$time_local] '
    # #                           '$http_host "$request" $status $body_bytes_sent '
    # #                           '"$http_referer" "$http_user_agent" $server_protocol';

    # map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    #     include                 /etc/nginx/map.d/header/proto.map
    # }
    # map $http_x_forwarded_port $proxy_x_forwarded_port {
    #     include                 /etc/nginx/map.d/header/port.map
    # }
    # map $http_upgrade $proxy_connection {
    #     include                 /etc/nginx/map.d/header/upgrade.map
    # }
    # map $scheme $proxy_x_forwarded_ssl {
    #     include                 /etc/nginx/map.d/header/scheme.map
    # }
    # map $host:$server_port$request_uri $noindex {
    #     include                 /etc/nginx/map.d/header/robot.map
    # }
    # map $request_method $skip_fetch {
    #     include                 /etc/nginx/map.d/srcache/*.map
    # }

    # map $sent_http_content_type $expires {
    #     include                 /etc/nginx/map.d/cache/expires.map
    # }
    # map $http_cookie $php_session_cookie {
    #     include                 /etc/nginx/map.d/cache/phpsession.map
    # }

    # map $request_uri $redirect_uri {
    #     include                 /etc/nginx/map.d/redirects/*.map
    # }
    # map $request_uri $no_cache {
    #     include                 /etc/nginx/map.d/nocache/nocache.map
    # }
    # map $http_cookie $no_cache {
    #     include                 /etc/nginx/map.d/nocache/cookie.map
    # }

    # map $http_user_agent $crawler_pre {
    #     include                 /etc/nginx/map.d/referrer/crawler.map
    # }
    # map $http_user_agent $bot_pre {
    #     include                 /etc/nginx/map.d/referrer/bot.map
    # }
    # map $args $prerender {
    #     default                 $bot_pre; "~(^|&)_escaped_fragment_=" 1
    # }


    # #                           ipscrub settings
    # ipscrub_period_seconds      3600;

    # ##
    # #                           Gzip Settings
    # ##

    # ##
    # #                           Virtual Host Configs
    # ##
    # include                     /etc/nginx/conf.d/*.conf;
    # include                     /etc/nginx/sites-enabled/*;
}
